CMAKE_MINIMUM_REQUIRED(VERSION 3.27.5)

PROJECT(MATCH3GAME VERSION 0.0.1)

SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
SET(EXTERNAL_DEPENDENCIES ${CMAKE_BINARY_DIR}/external)
SET(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${EXTERNAL_DEPENDENCIES})

SET(CMAKE_CXX_STANDARD 17)
SET(CMAKE_CXX_STANDARD_REQUIRED TRUE)

SET(EXECUTABLE_NAME match3)

# Set build type
IF($<CONFIG:Release>)
    SET(CMAKE_BUILD_TYPE "Release" CACHE STRING "Build type (Debug/Release)" FORCE)
    SET(STATIC_LIB_EXTENSION "${CMAKE_STATIC_LIBRARY_SUFFIX}")
    SET(DYNAMIC_LIB_EXTENSION "d${CMAKE_SHARED_LIBRARY_SUFFIX}")
ELSE()
    SET(CMAKE_BUILD_TYPE "Debug" CACHE STRING "Build type (Debug/Release)" FORCE)
    MESSAGE(WARNING "Project will be built in DEBUG MODE!")
    SET(STATIC_LIB_EXTENSION "d${CMAKE_STATIC_LIBRARY_SUFFIX}")
    SET(DYNAMIC_LIB_EXTENSION "d${CMAKE_SHARED_LIBRARY_SUFFIX}")
ENDIF()

# Configure compiler depedent options
IF(MSVC)
    ADD_COMPILE_OPTIONS("/W4" "$<$<CONFIG:RELEASE>:/O2>")
ELSE()
    ADD_COMPILE_OPTIONS("-Wall" "$<$<CONFIG:RELEASE>:-O2>")
    IF("${CMAKE_CXX_COMPILER_ID}" STREQUAL "Clang")
        ADD_COMPILE_OPTIONS("-stdlib=libc++")
    ELSE()
        # No thing special for GCC
    ENDIF()
ENDIF()

# Define subdirectories
ADD_SUBDIRECTORY(third-parties)
ADD_SUBDIRECTORY(app)
